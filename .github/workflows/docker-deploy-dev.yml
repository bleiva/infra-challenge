name: "[DEV] Build & Deploy App"

on:
  push:
    branches:
      - main
    paths:
      - 'charts/hello-python-chart/**'
      - 'app/**'
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Docker image tag"
        required: false
        default: "latest"

env:
  SECRET_NAME: ecr-repo-url-dev

jobs:
  build-and-deploy:
    name: docker build, push and deploy
    environment: dev
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.event.inputs.image_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name ${{ vars.EKS_CLUSTER_NAME }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Get ECR repo URL from Secrets Manager
        id: get-secret
        run: |
          SECRET_JSON=$(aws secretsmanager get-secret-value \
            --secret-id $SECRET_NAME \
            --query SecretString \
            --output text)
          ECR_URL=$(echo $SECRET_JSON | jq -r .url)
          echo "ECR_REPO_URL=$ECR_URL" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Define tags
        id: tags
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "IMAGE_TAG_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set IMAGE_TAG fallback
        if: ${{ env.IMAGE_TAG == '' }}
        run: echo "IMAGE_TAG=latest" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t $ECR_REPO_URL:$SHORT_SHA -t $ECR_REPO_URL:latest ./app/hello-python-app
          docker push $ECR_REPO_URL:$SHORT_SHA
          docker push $ECR_REPO_URL:latest

      - name: Output pushed images
        run: |
          echo "Pushed image: $ECR_REPO_URL:$SHORT_SHA"
          echo "Pushed image: $ECR_REPO_URL:latest"

      - name: Get Traefik LoadBalancer hostname
        id: get-traefik-hostname
        run: |
          export HOSTNAME=$(kubectl get svc traefik \
            -n kube-system \
            -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "TRAEFIK_HOSTNAME=$HOSTNAME" >> $GITHUB_ENV

      - name: Deploy to EKS with Helm
        run: |
          helm upgrade hello-app ./charts/hello-python-chart \
            --install \
            --namespace dev \
            --create-namespace \
            --set image.repository=$ECR_REPO_URL \
            --set image.tag=$IMAGE_TAG \
            --set ingress.hosts[0].host=$TRAEFIK_HOSTNAME \
            --set ingress.hosts[0].paths[0].path="/" \
            --set ingress.hosts[0].paths[0].pathType=Prefix

      - name: Show application URL
        run: |
          HOSTNAME=$(kubectl get svc traefik -n kube-system -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "âœ… The app is available at: http://$HOSTNAME"
